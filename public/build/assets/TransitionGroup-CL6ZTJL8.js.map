{"version":3,"file":"TransitionGroup-CL6ZTJL8.js","sources":["../../../resources/js/components/Transition.ts","../../../resources/js/components/TransitionGroup.ts"],"sourcesContent":["import {\n    BaseTransition,\n    BaseTransitionProps,\n    BaseTransitionPropsValidators,\n    h,\n    //assertNumber,\n    FunctionalComponent,\n    //compatUtils,\n    //DeprecationTypes,\n} from \"vue\";\nimport { isObject, toNumber, extend, isArray } from \"@vue/shared\";\n\nconst __DEV__ = false;\nconst __COMPAT__ = false;\n\nconst TRANSITION = \"transition\";\nconst ANIMATION = \"animation\";\n\ntype AnimationTypes = typeof TRANSITION | typeof ANIMATION;\n\nexport interface TransitionProps extends BaseTransitionProps<Element> {\n    name?: string;\n    type?: AnimationTypes;\n    css?: boolean;\n    duration?: number | { enter: number; leave: number };\n    // custom transition classes\n    enterFromClass?: string;\n    enterActiveClass?: string;\n    enterToClass?: string;\n    appearFromClass?: string;\n    appearActiveClass?: string;\n    appearToClass?: string;\n    leaveFromClass?: string;\n    leaveActiveClass?: string;\n    leaveToClass?: string;\n}\n\nexport interface ElementWithTransition extends HTMLElement {\n    // _vtc = Vue Transition Classes.\n    // Store the temporarily-added transition classes on the element\n    // so that we can avoid overwriting them if the element's class is patched\n    // during the transition.\n    _vtc?: Set<string>;\n}\n\n// DOM Transition is a higher-order-component based on the platform-agnostic\n// base Transition component, with DOM-specific logic.\nexport const Transition: FunctionalComponent<TransitionProps> = (props, { slots }) =>\n    h(BaseTransition, resolveTransitionProps(props), slots);\n\nTransition.displayName = \"Transition\";\n\nif (__COMPAT__) {\n    Transition.__isBuiltIn = true;\n}\n\nconst DOMTransitionPropsValidators = {\n    name: String,\n    type: String,\n    css: {\n        type: Boolean,\n        default: true,\n    },\n    duration: [String, Number, Object],\n    enterFromClass: String,\n    enterActiveClass: String,\n    enterToClass: String,\n    appearFromClass: String,\n    appearActiveClass: String,\n    appearToClass: String,\n    leaveFromClass: String,\n    leaveActiveClass: String,\n    leaveToClass: String,\n};\n\nexport const TransitionPropsValidators = (Transition.props = /*#__PURE__*/ extend(\n    {},\n    BaseTransitionPropsValidators as any,\n    DOMTransitionPropsValidators,\n));\n\n/**\n * #3227 Incoming hooks may be merged into arrays when wrapping Transition\n * with custom HOCs.\n */\nconst callHook = (hook: Function | Function[] | undefined, args: any[] = []) => {\n    if (isArray(hook)) {\n        hook.forEach((h) => h(...args));\n    } else if (hook) {\n        hook(...args);\n    }\n};\n\n/**\n * Check if a hook expects a callback (2nd arg), which means the user\n * intends to explicitly control the end of the transition.\n */\nconst hasExplicitCallback = (hook: Function | Function[] | undefined): boolean => {\n    return hook ? (isArray(hook) ? hook.some((h) => h.length > 1) : hook.length > 1) : false;\n};\n\nexport function resolveTransitionProps(rawProps: TransitionProps): BaseTransitionProps<Element> {\n    const baseProps: BaseTransitionProps<Element> = {};\n    for (const key in rawProps) {\n        if (!(key in DOMTransitionPropsValidators)) {\n            (baseProps as any)[key] = (rawProps as any)[key];\n        }\n    }\n\n    if (rawProps.css === false) {\n        return baseProps;\n    }\n\n    const {\n        name = \"v\",\n        type,\n        duration,\n        enterFromClass = `${name}-enter-from`,\n        enterActiveClass = `${name}-enter-active`,\n        enterToClass = `${name}-enter-to`,\n        appearFromClass = enterFromClass,\n        appearActiveClass = enterActiveClass,\n        appearToClass = enterToClass,\n        leaveFromClass = `${name}-leave-from`,\n        leaveActiveClass = `${name}-leave-active`,\n        leaveToClass = `${name}-leave-to`,\n    } = rawProps;\n\n    // legacy transition class compat\n    const legacyClassEnabled = __COMPAT__; //&& compatUtils.isCompatEnabled(DeprecationTypes.TRANSITION_CLASSES, null);\n    let legacyEnterFromClass: string;\n    let legacyAppearFromClass: string;\n    let legacyLeaveFromClass: string;\n    if (__COMPAT__ && legacyClassEnabled) {\n        const toLegacyClass = (cls: string) => cls.replace(/-from$/, \"\");\n        if (!rawProps.enterFromClass) {\n            legacyEnterFromClass = toLegacyClass(enterFromClass);\n        }\n        if (!rawProps.appearFromClass) {\n            legacyAppearFromClass = toLegacyClass(appearFromClass);\n        }\n        if (!rawProps.leaveFromClass) {\n            legacyLeaveFromClass = toLegacyClass(leaveFromClass);\n        }\n    }\n\n    const durations = normalizeDuration(duration);\n    const enterDuration = durations && durations[0];\n    const leaveDuration = durations && durations[1];\n    const {\n        onBeforeEnter,\n        onEnter,\n        onEnterCancelled,\n        onLeave,\n        onLeaveCancelled,\n        onBeforeAppear = onBeforeEnter,\n        onAppear = onEnter,\n        onAppearCancelled = onEnterCancelled,\n    } = baseProps;\n\n    const finishEnter = (el: Element, isAppear: boolean, done?: () => void) => {\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\n        done && done();\n    };\n\n    const finishLeave = (el: Element & { _isLeaving?: boolean }, done?: () => void) => {\n        el._isLeaving = false;\n        removeTransitionClass(el, leaveFromClass);\n        removeTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveActiveClass);\n        done && done();\n    };\n\n    const makeEnterHook = (isAppear: boolean) => {\n        return (el: Element, done: () => void) => {\n            const hook = isAppear ? onAppear : onEnter;\n            const resolve = () => finishEnter(el, isAppear, done);\n            callHook(hook, [el, resolve]);\n            nextFrame(() => {\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\n                if (__COMPAT__ && legacyClassEnabled) {\n                    const legacyClass = isAppear ? legacyAppearFromClass : legacyEnterFromClass;\n                    if (legacyClass) {\n                        removeTransitionClass(el, legacyClass);\n                    }\n                }\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\n                if (!hasExplicitCallback(hook)) {\n                    whenTransitionEnds(el, type, enterDuration, resolve);\n                }\n            });\n        };\n    };\n\n    return extend(baseProps, {\n        onBeforeEnter(el) {\n            callHook(onBeforeEnter, [el]);\n            addTransitionClass(el, enterFromClass);\n            if (__COMPAT__ && legacyClassEnabled && legacyEnterFromClass) {\n                addTransitionClass(el, legacyEnterFromClass);\n            }\n            addTransitionClass(el, enterActiveClass);\n        },\n        onBeforeAppear(el) {\n            callHook(onBeforeAppear, [el]);\n            addTransitionClass(el, appearFromClass);\n            if (__COMPAT__ && legacyClassEnabled && legacyAppearFromClass) {\n                addTransitionClass(el, legacyAppearFromClass);\n            }\n            addTransitionClass(el, appearActiveClass);\n        },\n        onEnter: makeEnterHook(false),\n        onAppear: makeEnterHook(true),\n        onLeave(el: Element & { _isLeaving?: boolean }, done) {\n            el._isLeaving = true;\n            const resolve = () => finishLeave(el, done);\n            addTransitionClass(el, leaveFromClass);\n            if (__COMPAT__ && legacyClassEnabled && legacyLeaveFromClass) {\n                addTransitionClass(el, legacyLeaveFromClass);\n            }\n            // force reflow so *-leave-from classes immediately take effect (#2593)\n            forceReflow();\n            addTransitionClass(el, leaveActiveClass);\n            nextFrame(() => {\n                if (!el._isLeaving) {\n                    // cancelled\n                    return;\n                }\n                removeTransitionClass(el, leaveFromClass);\n                if (__COMPAT__ && legacyClassEnabled && legacyLeaveFromClass) {\n                    removeTransitionClass(el, legacyLeaveFromClass);\n                }\n                addTransitionClass(el, leaveToClass);\n                if (!hasExplicitCallback(onLeave)) {\n                    whenTransitionEnds(el, type, leaveDuration, resolve);\n                }\n            });\n            callHook(onLeave, [el, resolve]);\n        },\n        onEnterCancelled(el) {\n            finishEnter(el, false);\n            callHook(onEnterCancelled, [el]);\n        },\n        onAppearCancelled(el) {\n            finishEnter(el, true);\n            callHook(onAppearCancelled, [el]);\n        },\n        onLeaveCancelled(el) {\n            finishLeave(el);\n            callHook(onLeaveCancelled, [el]);\n        },\n    } as BaseTransitionProps<Element>);\n}\n\nfunction normalizeDuration(duration: TransitionProps[\"duration\"]): [number, number] | null {\n    if (duration == null) {\n        return null;\n    } else if (isObject(duration)) {\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\n    } else {\n        const n = NumberOf(duration);\n        return [n, n];\n    }\n}\n\nfunction NumberOf(val: unknown): number {\n    const res = toNumber(val);\n    if (__DEV__) {\n        //assertNumber(res, \"<transition> explicit duration\");\n    }\n    return res;\n}\n\nexport function addTransitionClass(el: Element, cls: string) {\n    cls.split(/\\s+/).forEach((c) => c && el.classList.add(c));\n    ((el as ElementWithTransition)._vtc || ((el as ElementWithTransition)._vtc = new Set())).add(cls);\n}\n\nexport function removeTransitionClass(el: Element, cls: string) {\n    cls.split(/\\s+/).forEach((c) => c && el.classList.remove(c));\n    const { _vtc } = el as ElementWithTransition;\n    if (_vtc) {\n        _vtc.delete(cls);\n        if (!_vtc!.size) {\n            (el as ElementWithTransition)._vtc = undefined;\n        }\n    }\n}\n\nfunction nextFrame(cb: () => void) {\n    requestAnimationFrame(() => {\n        requestAnimationFrame(cb);\n    });\n}\n\nlet endId = 0;\n\nfunction whenTransitionEnds(\n    el: Element & { _endId?: number },\n    expectedType: TransitionProps[\"type\"] | undefined,\n    explicitTimeout: number | null,\n    resolve: () => void,\n) {\n    const id = (el._endId = ++endId);\n    const resolveIfNotStale = () => {\n        if (id === el._endId) {\n            resolve();\n        }\n    };\n\n    if (explicitTimeout) {\n        return setTimeout(resolveIfNotStale, explicitTimeout);\n    }\n\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\n    if (!type) {\n        return resolve();\n    }\n\n    const endEvent = type + \"end\";\n    let ended = 0;\n    const end = () => {\n        el.removeEventListener(endEvent, onEnd);\n        resolveIfNotStale();\n    };\n    const onEnd = (e: Event) => {\n        if (e.target === el && ++ended >= propCount) {\n            end();\n        }\n    };\n    setTimeout(() => {\n        if (ended < propCount) {\n            end();\n        }\n    }, timeout + 1);\n    el.addEventListener(endEvent, onEnd);\n}\n\ninterface CSSTransitionInfo {\n    type: AnimationTypes | null;\n    propCount: number;\n    timeout: number;\n    hasTransform: boolean;\n}\n\ntype AnimationProperties = \"Delay\" | \"Duration\";\ntype StylePropertiesKey = `${AnimationTypes}${AnimationProperties}` | `${typeof TRANSITION}Property`;\n\nexport function getTransitionInfo(el: Element, expectedType?: TransitionProps[\"type\"]): CSSTransitionInfo {\n    const styles = window.getComputedStyle(el) as Pick<CSSStyleDeclaration, StylePropertiesKey>;\n    // JSDOM may return undefined for transition properties\n    const getStyleProperties = (key: StylePropertiesKey) => (styles[key] || \"\").split(\", \");\n    const transitionDelays = getStyleProperties(`${TRANSITION}Delay`);\n    const transitionDurations = getStyleProperties(`${TRANSITION}Duration`);\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n    const animationDelays = getStyleProperties(`${ANIMATION}Delay`);\n    const animationDurations = getStyleProperties(`${ANIMATION}Duration`);\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\n\n    let type: CSSTransitionInfo[\"type\"] = null;\n    let timeout = 0;\n    let propCount = 0;\n    /* istanbul ignore if */\n    if (expectedType === TRANSITION) {\n        if (transitionTimeout > 0) {\n            type = TRANSITION;\n            timeout = transitionTimeout;\n            propCount = transitionDurations.length;\n        }\n    } else if (expectedType === ANIMATION) {\n        if (animationTimeout > 0) {\n            type = ANIMATION;\n            timeout = animationTimeout;\n            propCount = animationDurations.length;\n        }\n    } else {\n        timeout = Math.max(transitionTimeout, animationTimeout);\n        type = timeout > 0 ? (transitionTimeout > animationTimeout ? TRANSITION : ANIMATION) : null;\n        propCount = type ? (type === TRANSITION ? transitionDurations.length : animationDurations.length) : 0;\n    }\n    const hasTransform =\n        type === TRANSITION && /\\b(transform|all)(,|$)/.test(getStyleProperties(`${TRANSITION}Property`).toString());\n    return {\n        type,\n        timeout,\n        propCount,\n        hasTransform,\n    };\n}\n\nfunction getTimeout(delays: string[], durations: string[]): number {\n    while (delays.length < durations.length) {\n        delays = delays.concat(delays);\n    }\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\n}\n\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\n// numbers in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down\n// (i.e. acting as a floor function) causing unexpected behaviors\nfunction toMs(s: string): number {\n    // #8409 default value for CSS durations can be 'auto'\n    if (s === \"auto\") return 0;\n    return Number(s.slice(0, -1).replace(\",\", \".\")) * 1000;\n}\n\n// synchronously force layout to put elements into a certain state\nexport function forceReflow() {\n    return document.body.offsetHeight;\n}\n","import {\n    TransitionProps,\n    addTransitionClass,\n    removeTransitionClass,\n    ElementWithTransition,\n    getTransitionInfo,\n    resolveTransitionProps,\n    TransitionPropsValidators,\n    forceReflow,\n} from \"./Transition\";\nimport {\n    Fragment,\n    VNode,\n    warn,\n    resolveTransitionHooks,\n    useTransitionState,\n    getTransitionRawChildren,\n    getCurrentInstance,\n    setTransitionHooks,\n    createVNode,\n    onUpdated,\n    SetupContext,\n    toRaw,\n    //compatUtils,\n    //DeprecationTypes,\n    ComponentOptions,\n} from \"vue\";\nimport { extend } from \"@vue/shared\";\n\nconst __DEV__ = false;\nconst __COMPAT__ = false;\n\ninterface Position {\n    left: number;\n    top: number;\n}\n\nconst positionMap = new WeakMap<VNode, Position>();\nconst newPositionMap = new WeakMap<VNode, Position>();\n\nexport type TransitionGroupProps = Omit<TransitionProps, \"mode\"> & {\n    tag?: string;\n    moveClass?: string;\n};\n\nconst TransitionGroupImpl: ComponentOptions = {\n    name: \"TransitionGroup\",\n\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\n        tag: String,\n        moveClass: String,\n    }),\n\n    setup(props: TransitionGroupProps, { slots }: SetupContext) {\n        const instance = getCurrentInstance()!;\n        const state = useTransitionState();\n        let prevChildren: VNode[];\n        let children: VNode[];\n\n        onUpdated(() => {\n            // children is guaranteed to exist after initial render\n            if (!prevChildren.length) {\n                return;\n            }\n            const moveClass = props.moveClass || `${props.name || \"v\"}-move`;\n\n            if (!hasCSSTransform(prevChildren[0].el as ElementWithTransition, instance.vnode.el as Node, moveClass)) {\n                return;\n            }\n\n            // we divide the work into three loops to avoid mixing DOM reads and writes\n            // in each iteration - which helps prevent layout thrashing.\n            prevChildren.forEach(callPendingCbs);\n            prevChildren.forEach(recordPosition);\n            const movedChildren = prevChildren.filter(applyTranslation);\n\n            // force reflow to put everything in position\n            forceReflow();\n\n            movedChildren.forEach((c) => {\n                const el = c.el as ElementWithTransition;\n                const style = el.style;\n                addTransitionClass(el, moveClass);\n                style.transform = style.webkitTransform = style.transitionDuration = \"\";\n                const cb = ((el as any)._moveCb = (e: TransitionEvent) => {\n                    if (e && e.target !== el) {\n                        return;\n                    }\n                    if (!e || /transform$/.test(e.propertyName)) {\n                        el.removeEventListener(\"transitionend\", cb);\n                        (el as any)._moveCb = null;\n                        removeTransitionClass(el, moveClass);\n                    }\n                });\n                el.addEventListener(\"transitionend\", cb);\n            });\n        });\n\n        return () => {\n            const rawProps = toRaw(props);\n            const cssTransitionProps = resolveTransitionProps(rawProps);\n            let tag = rawProps.tag || Fragment;\n\n            if (\n                __COMPAT__ &&\n                !rawProps.tag //&&\n                //compatUtils.checkCompatEnabled(DeprecationTypes.TRANSITION_GROUP_ROOT, instance.parent)\n            ) {\n                tag = \"span\";\n            }\n\n            prevChildren = children;\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\n\n            for (let i = 0; i < children.length; i++) {\n                const child = children[i];\n                if (child.key != null) {\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\n                } else if (__DEV__) {\n                    warn(`<TransitionGroup> children must be keyed.`);\n                }\n            }\n\n            if (prevChildren) {\n                for (let i = 0; i < prevChildren.length; i++) {\n                    const child = prevChildren[i];\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\n                    positionMap.set(child, getRelativePosition(child.el as Element));\n                }\n            }\n\n            return createVNode(tag, null, children);\n        };\n    },\n};\n\nif (__COMPAT__) {\n    TransitionGroupImpl.__isBuiltIn = true;\n}\n\n/**\n * TransitionGroup does not support \"mode\" so we need to remove it from the\n * props declarations, but direct delete operation is considered a side effect\n * and will make the entire transition feature non-tree-shakeable, so we do it\n * in a function and mark the function's invocation as pure.\n */\nconst removeMode = (props: any) => delete props.mode;\n/*#__PURE__*/ removeMode(TransitionGroupImpl.props);\n\nexport const TransitionGroup = TransitionGroupImpl as unknown as {\n    new (): {\n        $props: TransitionGroupProps;\n    };\n};\n\nfunction callPendingCbs(c: VNode) {\n    const el = c.el as any;\n    if (el._moveCb) {\n        el._moveCb();\n    }\n    if (el._enterCb) {\n        el._enterCb();\n    }\n}\n\nfunction getRelativePosition(el: Element): Position {\n    const elRect = el.getBoundingClientRect();\n    const parentRect = el.parentElement?.getBoundingClientRect();\n\n    return {\n        left: elRect.left - (parentRect?.left || 0),\n        top: elRect.top - (parentRect?.top || 0),\n    };\n}\n\nfunction recordPosition(c: VNode) {\n    newPositionMap.set(c, getRelativePosition(c.el as Element));\n}\n\nfunction applyTranslation(c: VNode): VNode | undefined {\n    const oldPos = positionMap.get(c)!;\n    const newPos = newPositionMap.get(c)!;\n    const dx = oldPos.left - newPos.left;\n    const dy = oldPos.top - newPos.top;\n    if (dx || dy) {\n        const s = (c.el as HTMLElement).style;\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\n        s.transitionDuration = \"0s\";\n        return c;\n    }\n}\n\nfunction hasCSSTransform(el: ElementWithTransition, root: Node, moveClass: string): boolean {\n    // Detect whether an element with the move class applied has\n    // CSS transitions. Since the element may be inside an entering\n    // transition at this very moment, we make a clone of it and remove\n    // all other transition classes applied to ensure only the move class\n    // is applied.\n    const clone = el.cloneNode() as HTMLElement;\n    if (el._vtc) {\n        el._vtc.forEach((cls) => {\n            cls.split(/\\s+/).forEach((c) => c && clone.classList.remove(c));\n        });\n    }\n    moveClass.split(/\\s+/).forEach((c) => c && clone.classList.add(c));\n    clone.style.display = \"none\";\n    const container = (root.nodeType === 1 ? root : root.parentNode) as HTMLElement;\n    container.appendChild(clone);\n    const { hasTransform } = getTransitionInfo(clone);\n    container.removeChild(clone);\n    return hasTransform;\n}\n"],"names":["TRANSITION","ANIMATION","DOMTransitionPropsValidators","TransitionPropsValidators","extend","BaseTransitionPropsValidators","callHook","hook","args","isArray","h","hasExplicitCallback","resolveTransitionProps","rawProps","baseProps","key","name","type","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","durations","normalizeDuration","enterDuration","leaveDuration","onBeforeEnter","onEnter","onEnterCancelled","onLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAppearCancelled","finishEnter","el","isAppear","done","removeTransitionClass","finishLeave","makeEnterHook","resolve","nextFrame","addTransitionClass","whenTransitionEnds","forceReflow","isObject","NumberOf","val","toNumber","cls","c","_vtc","cb","endId","expectedType","explicitTimeout","id","resolveIfNotStale","timeout","propCount","getTransitionInfo","endEvent","ended","end","onEnd","e","styles","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","d","i","toMs","s","positionMap","newPositionMap","TransitionGroupImpl","props","slots","instance","getCurrentInstance","state","useTransitionState","prevChildren","children","onUpdated","moveClass","hasCSSTransform","callPendingCbs","recordPosition","movedChildren","applyTranslation","style","toRaw","cssTransitionProps","tag","Fragment","getTransitionRawChildren","child","setTransitionHooks","resolveTransitionHooks","getRelativePosition","createVNode","removeMode","TransitionGroup","elRect","parentRect","_a","oldPos","newPos","dx","dy","root","clone","container"],"mappings":"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"}