{"version":3,"file":"Dashboard-8ad2670c.mjs","sources":["../../../resources/js/composables/useDragAndDrop.ts","../../../resources/js/composables/useDropZone.ts","../../../resources/js/shared.ts","../../../resources/js/components/Ticket.vue","../../../resources/js/repositories/index.ts","../../../resources/js/models/TeamOperator.ts","../../../resources/js/models/Operator.ts","../../../resources/js/models/TeamCategory.ts","../../../resources/js/models/OperatorTeam.ts","../../../resources/js/models/TicketCategory.ts","../../../resources/js/models/Ticket.ts","../../../resources/js/repositories/TicketRepository.ts","../../../resources/js/components/TicketPool.vue","../../../resources/js/api/useSupervisorApi.ts","../../../resources/js/components/TicketRow.vue","../../../resources/js/components/OperatorRow.vue","../../../resources/js/types/events.d.ts","../../../resources/js/repositories/OperatorRepository.ts","../../../resources/js/pages/Dashboard.vue"],"sourcesContent":["import { ref } from \"vue\";\nimport type { MaybeRefOrGetter } from \"@vueuse/core\";\nimport { useEventListener } from \"@vueuse/core\";\n\nexport type DragStartHandler = (element: HTMLElement, dataTransfer: DataTransfer | null) => void;\n\nexport function useDragAndDrop(\n    target: MaybeRefOrGetter<HTMLElement | null | undefined>,\n    onDragStart?: DragStartHandler | string\n) {\n    const element = ref<HTMLElement | null | undefined>();\n\n    useEventListener<DragEvent>(target, \"dragstart\", (event) => {\n        element.value = event.target as HTMLElement;\n\n        if (typeof onDragStart === \"string\") {\n            const entry = onDragStart;\n            onDragStart = (element, dataTransfer) => {\n                dataTransfer?.setData(\"text/plain\", element.dataset[entry] ?? \"\");\n            };\n        }\n\n        onDragStart?.(element.value, event.dataTransfer);\n    });\n\n    useEventListener<DragEvent>(target, \"dragend\", () => {\n        element.value = null;\n    });\n\n    return {\n        element,\n    };\n}\n\nexport type UseDragAndDropReturn = ReturnType<typeof useDragAndDrop>;\n","import { ref } from \"vue\";\nimport type { MaybeRefOrGetter } from \"@vueuse/core\";\nimport { isClient, useEventListener } from \"@vueuse/core\";\n\n// export type DropHandler = <T extends DataTransfer | File[] = DataTransfer>(arg: T | null) => void\nexport type DropHandler = (arg: File[] | DataTransfer | null) => void;\nexport type FileDropHandler = (arg: File[] | null) => void;\nexport type DataDropHandler = (arg: DataTransfer | null) => void;\n\nexport function useDropZone(\n    target: MaybeRefOrGetter<HTMLElement | null | undefined>,\n    onDrop?: DataDropHandler,\n    filesOnly = true\n) {\n    const isOverDropZone = ref(false);\n    let counter = 0;\n\n    if (isClient) {\n        useEventListener<DragEvent>(target, \"dragenter\", (event) => {\n            event.preventDefault();\n            counter++;\n            isOverDropZone.value = true;\n        });\n        useEventListener<DragEvent>(target, \"dragover\", (event) => {\n            event.preventDefault();\n        });\n        useEventListener<DragEvent>(target, \"dragleave\", (event) => {\n            event.preventDefault();\n            counter--;\n            if (counter === 0) isOverDropZone.value = false;\n        });\n        useEventListener<DragEvent>(target, \"drop\", (event) => {\n            event.preventDefault();\n            counter = 0;\n            isOverDropZone.value = false;\n            if (onDrop) {\n                if (filesOnly) {\n                    const files = Array.from(event.dataTransfer?.files ?? []);\n                    const onFileDrop = onDrop as FileDropHandler;\n                    onFileDrop(files.length === 0 ? null : files);\n                } else {\n                    const onDataDrop = onDrop as DataDropHandler;\n                    onDataDrop(event.dataTransfer);\n                }\n            }\n        });\n    }\n\n    return {\n        isOverDropZone,\n    };\n}\n\nexport type UseDropZoneReturn = ReturnType<typeof useDropZone>;\n","import { createSharedComposable, useLocalStorage, useTimestamp } from \"@vueuse/core\";\nimport type { SortDirection, TicketSortBy, ToggleOptions } from \"./types\";\nimport { computed, reactive } from \"vue\";\n\nexport const useSharedOptions = createSharedComposable(() => {\n    const options = useLocalStorage<Array<ToggleOptions>>(\"ticket-allocator.options\", []);\n\n    const hideEmpty = computed(() => options.value.includes(\"hide-empty\"));\n    const altInfo = computed(() => options.value.includes(\"alt-info\"));\n    const unlocked = computed(() => options.value.includes(\"unlocked\"));\n\n    return reactive({\n        all: options,\n        hideEmpty,\n        altInfo,\n        unlocked,\n    });\n});\n\nexport const useSharedDisplayMode = createSharedComposable(() =>\n    useLocalStorage<TicketSortBy>(\"ticket-allocator.display-mode\", \"weight\")\n);\n\nexport const useSharedOperatorSorting = createSharedComposable(() =>\n    useLocalStorage<SortDirection>(\"ticket-allocator.operator-sorting\", \"asc\")\n);\n\nexport const useSharedTimestamp = createSharedComposable(() => useTimestamp({ interval: 1000 }));\n","<template>\n    <div class=\"d-inline-block\">\n        <v-btn size=\"small\" class=\"ticket justify-start px-2\" :class=\"{ overflow }\" :ripple=\"false\" flat width=\"100\">\n            <v-icon v-if=\"ticket.meta?.icon\" :icon=\"ticket.meta?.icon\" color=\"white\" />\n            <span class=\"text-white overflow-hidden\">\n                <span class=\"title inline-block relative\">{{ title() }}</span>\n            </span>\n            <v-overlay\n                open-on-click\n                activator=\"parent\"\n                location-strategy=\"connected\"\n                location=\"bottom center\"\n                origin=\"auto\"\n            >\n                <v-card width=\"400\" :prepend-icon=\"ticket.meta?.icon\" :title=\"cardTitle\" :subtitle=\"cardSubtitle\">\n                    <v-tabs v-model=\"tab\">\n                        <v-tab value=\"properties\">{{ $t(\"properties\") }}</v-tab>\n                        <v-tab value=\"metrics\">{{ $t(\"metrics\") }}</v-tab>\n                    </v-tabs>\n                    <v-card-text>\n                        <v-window v-model=\"tab\">\n                            <v-window-item value=\"properties\" class=\"prose\">\n                                <div v-if=\"typeof cardContent === 'string'\" v-html=\"md.render(cardContent)\"></div>\n                                <table v-else>\n                                    <tbody>\n                                        <tr v-for=\"(value, key) in cardContent\" :key=\"key\">\n                                            <th>{{ key }}</th>\n                                            <td v-html=\"md.renderInline(value)\"></td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </v-window-item>\n                            <v-window-item value=\"metrics\">Window Two</v-window-item>\n                        </v-window>\n                    </v-card-text>\n                </v-card>\n            </v-overlay>\n        </v-btn>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref } from \"vue\";\nimport MarkdownIt from \"markdown-it\";\nimport { usePage } from \"@inertiajs/vue3\";\nimport Ticket from \"@/models/Ticket\";\nimport { DisplayOptions } from \"@/types\";\nimport { useSharedOptions, useSharedDisplayMode } from \"@/shared\";\n\nconst props = defineProps<{\n    ticket: Ticket;\n}>();\n\nconst tab = ref(null);\n\nconst md = new MarkdownIt({ linkify: true });\n\nconst options = useSharedOptions();\nconst mode = useSharedDisplayMode();\n\nconst config = computed(() => usePage().props.options as DisplayOptions);\n\nconst threshold = computed(() => config.value[`${mode.value}_threshold`]);\n\nconst position = computed(() => props.ticket[mode.value]);\n\nconst compactPosition = computed(() => (position.value < 100000 ? position.value : position.value.toExponential(1)));\n\nconst categoryName = () => props.ticket.meta?.category_name ?? props.ticket.category?.name ?? \"\";\n\nconst categoryShort = () => props.ticket.meta?.category_short ?? props.ticket.category?.short ?? \"\";\n\nconst title = () => (options.altInfo ? props.ticket.meta?.title ?? categoryShort() : categoryShort());\n\nconst cardTitle = computed(() => props.ticket.meta?.card_title ?? \"Title\");\n\nconst cardSubtitle = computed(() => props.ticket.meta?.card_subtitle ?? categoryName());\n\nconst cardContent = computed(() => props.ticket.meta?.card_content ?? []);\n\nconst overflow = computed(() => position.value > threshold.value);\n\nconst animation = computed(() => ({\n    delay: -position.value + \"s\",\n    duration: threshold.value + \"s\",\n}));\n</script>\n\n<style scoped>\n.ticket {\n    animation-delay: v-bind(\"animation.delay\");\n    animation-duration: v-bind(\"animation.duration\");\n}\n\n.ticket:deep(.v-btn__content) {\n    overflow: hidden;\n}\n\n.ticket:hover .title {\n    animation: 4s linear infinite alternate ticker;\n}\n\n@keyframes ticker {\n    0%,\n    25% {\n        left: 0;\n        transform: translateX(0%);\n    }\n    75%,\n    100% {\n        left: 100%;\n        transform: translateX(-100%);\n    }\n}\n</style>\n","import { Query as BaseQuery, Repository as BaseRepository, Model } from \"pinia-orm\";\n\nexport class Query<M extends Model = Model> extends BaseQuery<M> {\n    increment(record: Record<keyof M, number>) {\n        return this.incrementOrDecrement(record, true);\n    }\n\n    decrement(record: Record<keyof M, number>) {\n        return this.incrementOrDecrement(record, false);\n    }\n\n    private incrementOrDecrement(record: Record<keyof M, number>, increment: boolean) {\n        const models = this.get(false);\n        if (models.length === 0) return [];\n        const newModels = models.map((model) => {\n            const newRecord = model.$getAttributes();\n            for (const key in record) {\n                if (Object.prototype.hasOwnProperty.call(newRecord, key) && typeof newRecord[key] === \"number\") {\n                    increment ? (newRecord[key] += record[key]) : (newRecord[key] -= record[key]);\n                }\n            }\n            const newModel = this.hydrate(newRecord, { action: \"update\", operation: \"set\" });\n            if (model.$self().updating(model, record) === false) return model;\n            newModel.$self().updated(newModel);\n            return newModel;\n        });\n        this.commit(\"update\", this.compile(newModels));\n        return newModels;\n    }\n}\n\nexport class Repository<M extends Model = Model> extends BaseRepository<M> {\n    query() {\n        return new Query(this.database, this.getModel(), this.queryCache, this.hydratedDataCache, this.pinia);\n    }\n}\n","import { Model } from \"pinia-orm\";\r\nimport { Uid } from \"pinia-orm/dist/decorators\";\r\n\r\nexport default class TeamOperator extends Model {\r\n    static entity = \"teamOperator\";\r\n\r\n    static primaryKey = [\"team_uuid\", \"operator_uuid\"];\r\n\r\n    @Uid() declare team_uuid: string;\r\n    @Uid() declare operator_uuid: string;\r\n}\r\n","import { Model } from \"pinia-orm\";\r\nimport { Attr, Bool, Num, Str, Uid, BelongsToMany, HasMany, OnDelete } from \"pinia-orm/dist/decorators\";\r\nimport OperatorTeam from \"./OperatorTeam\";\r\nimport TeamOperator from \"./TeamOperator\";\r\nimport Ticket from \"./Ticket\";\r\n\r\nexport default class Operator extends Model {\r\n    static entity = \"operators\";\r\n\r\n    static primaryKey = \"uuid\";\r\n\r\n    @Uid() declare uuid: string;\r\n    @Attr() declare user_id: number | string;\r\n    @Str(\"\") declare name: string;\r\n    @Bool(false) declare online: boolean;\r\n    @Bool(false) declare ready: boolean;\r\n    @Num(null) declare ticket_limit: number | null;\r\n    @Num(null) declare complexity_limit: number | null;\r\n\r\n    @BelongsToMany(() => OperatorTeam, () => TeamOperator, \"operator_uuid\", \"team_uuid\") declare teams: OperatorTeam[];\r\n    @HasMany(() => Ticket, \"handler_uuid\") @OnDelete(\"set null\") declare tickets: Ticket[];\r\n\r\n    get ticket_count() {\r\n        return this.tickets.length;\r\n    }\r\n\r\n    get free_slots() {\r\n        return this.ticket_limit !== null ? Math.max(0, this.ticket_limit - this.ticket_count) : null;\r\n    }\r\n\r\n    get total_complexity() {\r\n        return this.tickets.reduce((n, { complexity }) => n + complexity, 0);\r\n    }\r\n\r\n    get free_complexity() {\r\n        return this.complexity_limit !== null ? Math.max(0, this.complexity_limit - this.total_complexity) : null;\r\n    }\r\n}\r\n","import { Model } from \"pinia-orm\";\r\nimport { Uid } from \"pinia-orm/dist/decorators\";\r\n\r\nexport default class TeamCategory extends Model {\r\n    static entity = \"teamCategory\";\r\n\r\n    static primaryKey = [\"team_uuid\", \"category_uuid\"];\r\n\r\n    @Uid() declare team_uuid: string;\r\n    @Uid() declare category_uuid: string;\r\n}\r\n","import { Model } from \"pinia-orm\";\r\nimport { Attr, Str, Uid, BelongsToMany } from \"pinia-orm/dist/decorators\";\r\nimport Operator from \"./Operator\";\r\nimport TeamOperator from \"./TeamOperator\";\r\nimport TicketCategory from \"./TicketCategory\";\r\nimport TeamCategory from \"./TeamCategory\";\r\n\r\nexport default class OperatorTeam extends Model {\r\n    static entity = \"operatorTeams\";\r\n\r\n    static primaryKey = \"uuid\";\r\n\r\n    @Uid() declare uuid: string;\r\n    @Str(\"\") declare name: string;\r\n    @Str(\"\") declare description: string;\r\n    @Attr() declare created_at: string;\r\n    @Attr() declare updated_at: string;\r\n    @Attr() declare deleted_at: string | null;\r\n\r\n    @BelongsToMany(() => Operator, () => TeamOperator, \"team_uuid\", \"operator_uuid\") declare operators: Operator[];\r\n    @BelongsToMany(() => TicketCategory, () => TeamCategory, \"team_uuid\", \"category_uuid\")\r\n    declare ticketCategories: TicketCategory[];\r\n}\r\n","import { Model } from \"pinia-orm\";\r\nimport { Attr, Num, Str, Uid, BelongsToMany, HasMany } from \"pinia-orm/dist/decorators\";\r\nimport OperatorTeam from \"./OperatorTeam\";\r\nimport TeamCategory from \"./TeamCategory\";\r\nimport Ticket from \"./Ticket\";\r\n\r\nexport default class TicketCategory extends Model {\r\n    static entity = \"ticketCategories\";\r\n\r\n    static primaryKey = \"uuid\";\r\n\r\n    @Uid() declare uuid: string;\r\n    @Str(\"\") declare name: string;\r\n    @Str(\"\") declare short: string;\r\n    @Num(0) declare initial_weight: number;\r\n    @Num(0) declare weight_increment: number;\r\n    @Num(0) declare complexity: number;\r\n    @Num(0) declare delay: number;\r\n    @Attr() declare created_at: string;\r\n    @Attr() declare updated_at: string;\r\n\r\n    @BelongsToMany(() => OperatorTeam, () => TeamCategory, \"category_uuid\", \"team_uuid\") declare teams: OperatorTeam[];\r\n\r\n    @HasMany(() => Ticket, \"category_uuid\") declare tickets: Ticket[];\r\n}\r\n","import { Model } from \"pinia-orm\";\r\nimport { Attr, Num, Str, Uid, Cast, BelongsTo } from \"pinia-orm/dist/decorators\";\r\nimport { DateCast } from \"pinia-orm/dist/casts\";\r\nimport { useSharedTimestamp } from \"@/shared\";\r\nimport TicketCategory from \"./TicketCategory\";\r\nimport Operator from \"./Operator\";\r\n\r\nexport default class Ticket extends Model {\r\n    static entity = \"tickets\";\r\n\r\n    static primaryKey = \"uuid\";\r\n\r\n    @Uid() declare uuid: string;\r\n    @Str(\"\") declare category_uuid: string;\r\n    @Str(null) declare handler_uuid: string | null;\r\n    @Attr() declare meta: Record<string, string> | null;\r\n    @Attr() declare metrics: Record<string, Record<string, number>> | null;\r\n    @Num(0) declare initial_weight: number;\r\n    @Num(0) declare weight_increment: number;\r\n    @Num(0) declare complexity: number;\r\n    @Num(0) declare delay: number;\r\n    @Attr() declare created_at: string;\r\n\r\n    @BelongsTo(() => TicketCategory, \"category_uuid\") declare category: TicketCategory;\r\n\r\n    @BelongsTo(() => Operator, \"handler_uuid\") declare handler: Operator | null;\r\n\r\n    get duration() {\r\n        return Math.round((useSharedTimestamp().value - new Date(this.created_at).getTime()) / 1000);\r\n    }\r\n\r\n    get weight() {\r\n        return this.initial_weight + this.weight_increment * this.duration;\r\n    }\r\n}\r\n","import { Repository } from \".\";\nimport Ticket from \"@/models/Ticket\";\nimport * as Events from \"@/types/events\";\n\nexport default class TicketRepository extends Repository<Ticket> {\n    use = Ticket;\n\n    create = (payload: Events.Ticket.CreatedPayload) => {\n        this.save({\n            uuid: payload.uuid,\n            category_uuid: payload.categoryUuid,\n            handler_uuid: payload.operatorUuid,\n            initial_weight: payload.initialWeight,\n            weight_increment: payload.weightIncrement,\n            complexity: payload.complexity,\n            delay: payload.delay,\n            meta: payload.meta,\n            created_at: new Date().toISOString(),\n        });\n    };\n\n    close = ({ uuid }: Events.Ticket.ClosedPayload) => {\n        this.destroy(uuid);\n    };\n\n    bind = ({ uuid, operatorUuid, meta }: Events.Ticket.BoundPayload) => {\n        const ticketMeta = this.find(uuid)?.meta ?? {};\n        meta = { ...ticketMeta, ...meta };\n        this.where(\"uuid\", uuid).update({ handler_uuid: operatorUuid, meta });\n    };\n\n    unbind = ({ uuid }: Events.Ticket.UnboundPayload) => {\n        this.where(\"uuid\", uuid).update({ handler_uuid: null });\n    };\n\n    changeCategory = ({ uuid, categoryUuid, meta }: Events.Ticket.CategoryChangedPayload) => {\n        const ticketMeta = this.find(uuid)?.meta ?? {};\n        meta = { ...ticketMeta, ...meta };\n        this.where(\"uuid\", uuid).update({ category_uuid: categoryUuid, meta });\n    };\n\n    setMetaValue = ({ uuid, key, value }: Events.Ticket.MetaValueSetPayload) => {\n        const meta = this.find(uuid)?.meta ?? {};\n        meta[key] = value;\n        this.where(\"uuid\", uuid).update({ meta });\n    };\n\n    mergeMetaValues = ({ uuid, meta }: Events.Ticket.MetaValuesMergedPayload) => {\n        const ticketMeta = this.find(uuid)?.meta ?? {};\n        meta = { ...ticketMeta, ...meta };\n        this.where(\"uuid\", uuid).update({ meta });\n    };\n\n    adjustMetrics = ({ uuid, factorUuid, adjustments }: Events.Ticket.MetricsAdjustedPayload) => {\n        let metrics = this.find(uuid)?.metrics ?? {};\n        metrics = { ...metrics, ...adjustments };\n        this.where(\"uuid\", uuid).update({ metrics });\n    };\n\n    unbound() {\n        return this.where(\"handler_uuid\", null);\n    }\n\n    bound(handlerUuid: string) {\n        return this.where(\"handler_uuid\", handlerUuid);\n    }\n}\n","<template>\r\n    <div ref=\"ticketPool\" @mouseup=\"unlock\">\r\n        <TransitionGroup name=\"ticket-pool\" :css=\"animationEnabled\">\r\n            <TicketComponent\r\n                v-for=\"ticket in tickets\"\r\n                :key=\"ticket.uuid\"\r\n                :data-uuid=\"ticket.uuid\"\r\n                :ticket=\"ticket\"\r\n                draggable=\"true\"\r\n                class=\"mr-1 mb-1\"\r\n                @mousedown.ctrl=\"lock\"\r\n            />\r\n        </TransitionGroup>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, watch, onMounted } from \"vue\";\r\nimport { useMouse, usePointerLock } from \"@vueuse/core\";\r\nimport { useDragAndDrop } from \"@/composables\";\r\nimport { default as TicketComponent } from \"@/components/Ticket.vue\";\r\nimport Ticket from \"@/models/Ticket\";\r\n\r\nimport { useRepo } from \"pinia-orm\";\r\nimport TicketRepository from \"@/repositories/TicketRepository\";\r\n\r\ndefineProps<{\r\n    tickets: Ticket[];\r\n}>();\r\n\r\nconst ticketPool = ref<HTMLElement | null>(null);\r\nuseDragAndDrop(ticketPool, \"uuid\");\r\n\r\nconst { lock, unlock, element, triggerElement } = usePointerLock(ticketPool);\r\nconst { x } = useMouse({ type: \"movement\" });\r\n\r\nconst ticketRepo = computed(() => useRepo(TicketRepository));\r\n\r\nwatch([element, x], ([element, x]) => {\r\n    if (!element || !triggerElement.value) return;\r\n\r\n    const uuid = triggerElement.value.dataset.uuid as string;\r\n    //multiplier.value = Math.round(Math.min(Math.max(multiplier.value - y / 10, 1), 100));\r\n    //correction.value = Math.max(correction.value - x * multiplier.value, correction.value - props.ticket.weight);\r\n    /*if (x < 0) {\r\n        ticketRepo.value.incrementInitialWeight({ uuid, weightPoints: -x * 10 });\r\n    } else if (x > 0) {\r\n        ticketRepo.value.decrementInitialWeight({ uuid, weightPoints: x * 10 });\r\n    }*/\r\n});\r\n\r\nconst animationEnabled = ref(false);\r\n\r\nonMounted(() => {\r\n    setTimeout(() => (animationEnabled.value = true), 500);\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.ticket-pool-move,\r\n.ticket-pool-enter-active {\r\n    transition: all 0.5s ease;\r\n}\r\n\r\n.ticket-pool-enter-from {\r\n    transform: translateX(300px);\r\n}\r\n\r\n.ticket-pool-leave-active {\r\n    transition: opacity 0.5s;\r\n}\r\n\r\n.ticket-pool-leave-to {\r\n    opacity: 0;\r\n}\r\n</style>\r\n","import route from \"ziggy-js\";\r\n\r\nexport function useSupervisorApi() {\r\n    async function ready(operatorUuid: string, ready: boolean) {\r\n        return await window.axios.patch(route(\"ticket-allocator.operators.ready\", operatorUuid), { ready });\r\n    }\r\n\r\n    async function weight(ticketUuid: string, weightPoints: number) {\r\n        return await window.axios.patch(route(\"ticket-allocator.tickets.weight\", ticketUuid), {\r\n            weight_points: weightPoints,\r\n        });\r\n    }\r\n\r\n    async function handler(ticketUuid: string, operatorUuid?: string | null) {\r\n        return await window.axios.patch(route(\"ticket-allocator.tickets.handler\", ticketUuid), {\r\n            operator_uuid: operatorUuid ?? null,\r\n        });\r\n    }\r\n\r\n    async function close(ticketUuid: string) {\r\n        return await window.axios.delete(route(\"ticket-allocator.tickets.close\", ticketUuid));\r\n    }\r\n\r\n    return { ready, weight, handler, close };\r\n}\r\n","<template>\n    <tr ref=\"ticketRow\" class=\"ticket-row\" :class=\"{ dragover: isOverDropZone }\">\n        <td class=\"status\">\n            <slot name=\"status\" />\n        </td>\n\n        <td class=\"name font-weight-bold\">\n            <slot name=\"name\" />\n        </td>\n\n        <td class=\"load text-center\">\n            <slot name=\"load\">{{ tickets.length }}</slot\n            >/<slot name=\"load-max\">&infin;</slot>\n        </td>\n\n        <td class=\"complexity text-center\">\n            <slot name=\"complexity\">{{ complexity }}</slot\n            >/<slot name=\"complexity-max\">&infin;</slot>\n        </td>\n\n        <td class=\"tickets pt-1\" :class=\"{ collapsed }\">\n            <TicketPool :tickets=\"tickets\" />\n        </td>\n\n        <td class=\"more text-center\">\n            <v-btn size=\"x-small\" variant=\"tonal\" :icon=\"moreIcon\" @click=\"collapsed = !collapsed\" />\n        </td>\n    </tr>\n</template>\n\n<script setup lang=\"ts\">\nimport TicketPool from \"@/components/TicketPool.vue\";\nimport { computed, ref } from \"vue\";\nimport { useSupervisorApi } from \"@/api\";\nimport { useDropZone } from \"@/composables\";\nimport Ticket from \"@/models/Ticket\";\n\nconst props = defineProps<{\n    tickets: Ticket[];\n}>();\n\nlet collapsed = ref(false);\n\nconst complexity = computed(() => props.tickets.reduce((n, { complexity }) => n + complexity, 0));\n\nconst moreIcon = computed(() => (collapsed.value ? \"mdi-chevron-down\" : \"mdi-chevron-up\"));\n\nconst api = useSupervisorApi();\n\nconst ticketRow = ref<HTMLElement | null>(null);\nconst { isOverDropZone } = useDropZone(\n    ticketRow,\n    async (dataTransfer) => {\n        const uuid = dataTransfer?.getData(\"text/plain\");\n        if (!uuid) throw new Error(\"Ticket UUID undefined.\");\n        const operatorUuid = ticketRow.value?.dataset.uuid;\n        return await api.handler(uuid, operatorUuid);\n    },\n    false\n);\n</script>\n\n<style scoped>\n.ticket-row .status {\n    width: 2.2em;\n}\n.ticket-row .name {\n    width: 14em;\n}\n.ticket-row .load {\n    width: 3.9em;\n}\n.ticket-row .complexity {\n    width: 5em;\n}\n.ticket-row .more {\n    width: 4.8em;\n}\n.ticket-row.dragover {\n    background-color: #def2de !important;\n}\n\n.tickets {\n    overflow: hidden;\n}\n.tickets.collapsed {\n    white-space: nowrap;\n    mask-image: linear-gradient(to right, black 85%, transparent);\n}\n</style>\n","<template>\n    <TicketRow :tickets=\"operator.tickets\" :data-uuid=\"operator.uuid\" class=\"operator\" :class=\"status\">\n        <template #status><v-icon icon=\"mdi-account\" @click=\"toggleReadiness\" /></template>\n        <template #load-max>{{ operator.ticket_limit ?? \"&infin;\" }}</template>\n        <template #complexity-max>{{ operator.complexity_limit ?? \"&infin;\" }}</template>\n        <template #name>{{ operator.name }}</template>\n    </TicketRow>\n</template>\n\n<script setup lang=\"ts\">\nimport TicketRow from \"@/components/TicketRow.vue\";\nimport { computed } from \"vue\";\nimport { useSupervisorApi } from \"@/api\";\nimport Operator from \"@/models/Operator\";\n\nconst props = defineProps<{\n    operator: Operator;\n}>();\n\nconst status = computed(() => ({\n    online: props.operator.online,\n    ready: props.operator.ready,\n    busy: !!props.operator.tickets?.length,\n    full: props.operator.ticket_limit !== null && props.operator.tickets?.length >= props.operator.ticket_limit,\n}));\n\nconst api = useSupervisorApi();\n\nconst toggleReadiness = async () => await api.ready(props.operator.uuid, !props.operator.ready);\n</script>\n\n<style scoped>\n.operator i {\n    color: #999;\n}\n.operator.online i {\n    color: #f44;\n}\n.operator.online.ready i {\n    color: #4f4;\n}\n.operator.online.ready.full i {\n    color: #fe4;\n}\n.operator:not(.online).busy {\n    background-color: #f2dede;\n}\n</style>\n","export const Channel = \"ticket-allocator\";\n\nexport enum Operator {\n    Commented = \".operator.commented\",\n    ComplexityLimitAdjusted = \".operator.complexity-limit-adjusted\",\n    Enrolled = \".operator.enrolled\",\n    JoinedTeam = \".operator.joined-team\",\n    LeftTeam = \".operator.left-team\",\n    SetTeams = \".operator.set-teams\",\n    NameChanged = \".operator.name-changed\",\n    NotReady = \".operator.not-ready\",\n    Offline = \".operator.offline\",\n    Online = \".operator.online\",\n    Ready = \".operator.ready\",\n    Resigned = \".operator.resigned\",\n    TicketCategoryAttached = \".operator.ticket-category-attached\",\n    TicketCategoryDetached = \".operator.ticket-category-detached\",\n    TicketLimitAdjusted = \".operator.ticket-limit-adjusted\",\n}\n\nexport enum Ticket {\n    Bound = \".ticket.bound\",\n    CategoryChanged = \".ticket.category-changed\",\n    MetaValueSet = \".ticket.meta-value-set\",\n    MetaValuesMerged = \".ticket.meta-values-merged\",\n    MetricsAdjusted = \".ticket.metrics-adjusted\",\n    Closed = \".ticket.closed\",\n    Created = \".ticket.created\",\n    Unbound = \".ticket.unbound\",\n}\n\ndeclare namespace Operator {\n    export interface CommentedPayload {\n        uuid: string;\n        orderId: number;\n    }\n\n    export interface ComplexityLimitAdjustedPayload {\n        uuid: string;\n        complexityLimit: number | null;\n    }\n\n    export interface EnrolledPayload {\n        uuid: string;\n        userId: number | string;\n        name: string | null;\n        online: boolean;\n        ready: boolean;\n        ticketLimit: number | null;\n        complexityLimit: number | null;\n    }\n\n    export interface JoinedTeamPayload {\n        uuid: string;\n        operatorTeamUuid: string;\n    }\n\n    export interface LeftTeamPayload {\n        uuid: string;\n        operatorTeamUuid: string;\n    }\n\n    export interface SetTeamsPayload {\n        uuid: string;\n        operatorTeamUuids: string[];\n    }\n\n    export interface NameChangedPayload {\n        uuid: string;\n        name: string | null;\n    }\n\n    export interface NotReadyPayload {\n        uuid: string;\n    }\n\n    export interface OfflinePayload {\n        uuid: string;\n    }\n\n    export interface OnlinePayload {\n        uuid: string;\n    }\n\n    export interface ReadyPayload {\n        uuid: string;\n    }\n\n    export interface ResignedPayload {\n        uuid: string;\n    }\n\n    export interface TicketCategoryAttachedPayload {\n        uuid: string;\n        ticketCategoryUuid: string;\n    }\n\n    export interface TicketCategoryDetachedPayload {\n        uuid: string;\n        ticketCategoryUuid: string;\n    }\n\n    export interface TicketLimitAdjustedPayload {\n        uuid: string;\n        ticketLimit: number | null;\n    }\n}\n\ndeclare namespace Ticket {\n    export interface BoundPayload {\n        uuid: string;\n        operatorUuid: string;\n        meta: Record<string, string>;\n    }\n\n    export interface CategoryChangedPayload {\n        uuid: string;\n        categoryUuid: string;\n        meta: Record<string, string>;\n    }\n\n    export interface MetaValueSetPayload {\n        uuid: string;\n        key: string;\n        value: string;\n    }\n\n    export interface MetaValuesMergedPayload {\n        uuid: string;\n        meta: Record<string, string>;\n    }\n\n    export interface MetricsAdjustedPayload {\n        uuid: string;\n        factorUuid: string;\n        adjustments: Record<string, Record<string, number>>;\n    }\n\n    export interface ClosedPayload {\n        uuid: string;\n    }\n\n    export interface CreatedPayload {\n        uuid: string;\n        categoryUuid: string;\n        operatorUuid: string | null;\n        initialWeight: number;\n        weightIncrement: number;\n        complexity: number;\n        delay: number;\n        meta: Record<string, string>;\n    }\n\n    export interface UnboundPayload {\n        uuid: string;\n    }\n}\n","import { Repository } from \"pinia-orm\";\nimport Operator from \"@/models/Operator\";\nimport * as Events from \"@/types/events\";\n\nexport default class OperatorRepository extends Repository<Operator> {\n    use = Operator;\n\n    enroll = (payload: Events.Operator.EnrolledPayload) => {\n        this.save({\n            uuid: payload.uuid,\n            user_id: payload.userId,\n            name: payload.name,\n            online: payload.online,\n            ready: payload.ready,\n            ticket_limit: payload.ticketLimit,\n            complexity_limit: payload.complexityLimit,\n        });\n    };\n\n    resign = ({ uuid }: Events.Operator.ResignedPayload) => {\n        this.destroy(uuid);\n    };\n\n    changeName = ({ uuid, name }: Events.Operator.NameChangedPayload) => {\n        this.where(\"uuid\", uuid).update({ name });\n    };\n\n    setOnline = ({ uuid }: Events.Operator.OnlinePayload) => {\n        this.where(\"uuid\", uuid).update({ online: true });\n    };\n\n    setOffline = ({ uuid }: Events.Operator.OfflinePayload) => {\n        this.where(\"uuid\", uuid).update({ online: false });\n    };\n\n    setReady = ({ uuid }: Events.Operator.ReadyPayload) => {\n        this.where(\"uuid\", uuid).update({ ready: true });\n    };\n\n    setNotReady = ({ uuid }: Events.Operator.NotReadyPayload) => {\n        this.where(\"uuid\", uuid).update({ ready: false });\n    };\n\n    adjustTicketLimit = ({ uuid, ticketLimit }: Events.Operator.TicketLimitAdjustedPayload) => {\n        this.where(\"uuid\", uuid).update({ ticket_limit: ticketLimit });\n    };\n\n    adjustComplexityLimit = ({ uuid, complexityLimit }: Events.Operator.ComplexityLimitAdjustedPayload) => {\n        this.where(\"uuid\", uuid).update({ complexity_limit: complexityLimit });\n    };\n}\n","<template>\n    <Head :title=\"$t('dashboard')\" />\n\n    <DefaultLayout>\n        <template #header>\n            <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">{{ $t(\"dashboard\") }}</h2>\n        </template>\n\n        <div>\n            <v-container fluid>\n                <v-row>\n                    <v-col>\n                        <v-btn-toggle v-model=\"options.all\" variant=\"plain\" multiple>\n                            <v-btn\n                                value=\"hide-empty\"\n                                :icon=\"options.hideEmpty ? 'mdi-eye-off-outline' : 'mdi-eye-outline'\"\n                            />\n                            <v-btn\n                                value=\"alt-info\"\n                                :icon=\"options.altInfo ? 'mdi-magnify-plus-outline' : 'mdi-magnify'\"\n                            />\n                            <v-btn\n                                value=\"unlocked\"\n                                :icon=\"options.unlocked ? 'mdi-lock-open-variant' : 'mdi-lock'\"\n                                color=\"red\"\n                                :variant=\"options.unlocked ? 'text' : 'plain'\"\n                            />\n                        </v-btn-toggle>\n                        <v-btn-group v-if=\"options.unlocked\" variant=\"plain\">\n                            <v-btn ref=\"closeTicket\" :icon=\"isOverDropZone ? 'mdi-delete-empty' : 'mdi-delete'\" />\n                            <v-btn icon=\"mdi-refresh\" />\n                        </v-btn-group>\n                    </v-col>\n                    <v-col cols=\"2\">\n                        <v-switch\n                            v-model=\"oprSort\"\n                            false-value=\"asc\"\n                            true-value=\"desc\"\n                            prepend-icon=\"mdi-sort-ascending\"\n                            append-icon=\"mdi-sort-descending\"\n                            class=\"d-flex justify-end\"\n                        />\n                    </v-col>\n                    <v-col cols=\"2\">\n                        <v-switch\n                            v-model=\"mode\"\n                            false-value=\"weight\"\n                            true-value=\"duration\"\n                            prepend-icon=\"mdi-weight\"\n                            append-icon=\"mdi-clock\"\n                            class=\"d-flex justify-end\"\n                        />\n                    </v-col>\n                </v-row>\n            </v-container>\n            <v-table density=\"compact\" class=\"ticket-monitor\">\n                <tbody class=\"align-text-top\">\n                    <TicketRow :tickets=\"sortedTickets\">\n                        <template #name>{{ $t(\"ticket_pool\") }}</template>\n                    </TicketRow>\n                    <TransitionGroup name=\"operator-pool\">\n                        <OperatorRow v-for=\"operator in sortedOperators\" :key=\"operator.uuid\" :operator=\"operator\" />\n                    </TransitionGroup>\n                </tbody>\n            </v-table>\n        </div>\n    </DefaultLayout>\n</template>\n\n<script setup lang=\"ts\">\nimport DefaultLayout from \"@/layouts/Default.vue\";\nimport TicketRow from \"@/components/TicketRow.vue\";\nimport OperatorRow from \"@/components/OperatorRow.vue\";\nimport { Head } from \"@inertiajs/vue3\";\nimport { computed, ref, onMounted } from \"vue\";\nimport { refThrottled } from \"@vueuse/core\";\nimport { useSupervisorApi } from \"@/api\";\nimport { useDropZone } from \"@/composables\";\nimport type { Operator, Ticket, TicketCategory } from \"@/types\";\nimport { useSharedOptions, useSharedDisplayMode, useSharedOperatorSorting } from \"@/shared\";\nimport * as Events from \"@/types/events.d\";\nimport { PusherChannel } from \"laravel-echo/dist/channel\";\n\nimport { useRepo } from \"pinia-orm\";\nimport { useCollect } from \"pinia-orm/dist/helpers\";\nimport OperatorRepository from \"@/repositories/OperatorRepository\";\nimport TicketRepository from \"@/repositories/TicketRepository\";\nimport TicketCategoryRepository from \"@/models/TicketCategory\";\n\nconst props = defineProps<{\n    operators: Operator[];\n    tickets: Ticket[];\n    ticketCategories: TicketCategory[];\n}>();\n\nconst options = useSharedOptions();\nconst mode = useSharedDisplayMode();\nconst oprSort = useSharedOperatorSorting();\n\nconst operatorRepo = computed(() => useRepo(OperatorRepository));\nconst ticketRepo = computed(() => useRepo(TicketRepository));\nconst ticketCategoryRepo = computed(() => useRepo(TicketCategoryRepository));\n\nconst sortedOperators = refThrottled(\n    computed(() =>\n        useCollect(\n            operatorRepo.value\n                .with(\"tickets\", (query) => {\n                    query.with(\"category\").orderBy(mode.value, \"desc\");\n                })\n                .get()\n        ).sortBy([\n            [\"online\", \"desc\"],\n            [\"ready\", \"desc\"],\n            [\"free_slots\", \"desc\"],\n            [\"ticket_count\", \"asc\"],\n            [\"name\", \"asc\"],\n        ])\n    ),\n    750\n);\n\nconst sortedTickets = refThrottled(\n    computed(() => ticketRepo.value.unbound().with(\"category\").orderBy(mode.value, \"desc\").get()),\n    750\n);\n\nconst api = useSupervisorApi();\n\nconst closeTicket = ref<HTMLElement | null>(null);\nconst { isOverDropZone } = useDropZone(\n    closeTicket,\n    async (dataTransfer) => {\n        const uuid = dataTransfer?.getData(\"text/plain\");\n        if (!uuid) throw new Error(\"Ticket UUID undefined.\");\n        return await api.close(uuid);\n    },\n    false\n);\n\nonMounted(() => {\n    operatorRepo.value.fresh(props.operators);\n    ticketRepo.value.fresh(props.tickets);\n    ticketCategoryRepo.value.fresh(props.ticketCategories);\n\n    window.ticketAllocatorChannel = <PusherChannel>window.Echo.channel(Events.Channel);\n\n    window.ticketAllocatorChannel.listenToAll((event: string, data: any) => {\n        console.log(event, data);\n    });\n\n    window.ticketAllocatorChannel\n        .listen(Events.Operator.Enrolled, operatorRepo.value.enroll)\n        .listen(Events.Operator.Resigned, operatorRepo.value.resign)\n        .listen(Events.Operator.NameChanged, operatorRepo.value.changeName)\n        .listen(Events.Operator.Online, operatorRepo.value.setOnline)\n        .listen(Events.Operator.Offline, operatorRepo.value.setOffline)\n        .listen(Events.Operator.Ready, operatorRepo.value.setReady)\n        .listen(Events.Operator.NotReady, operatorRepo.value.setNotReady)\n        .listen(Events.Operator.TicketLimitAdjusted, operatorRepo.value.adjustTicketLimit)\n        .listen(Events.Operator.ComplexityLimitAdjusted, operatorRepo.value.adjustComplexityLimit)\n        .listen(Events.Ticket.Created, ticketRepo.value.create)\n        .listen(Events.Ticket.Closed, ticketRepo.value.close)\n        .listen(Events.Ticket.Bound, ticketRepo.value.bind)\n        .listen(Events.Ticket.Unbound, ticketRepo.value.unbind)\n        .listen(Events.Ticket.CategoryChanged, ticketRepo.value.changeCategory)\n        .listen(Events.Ticket.MetaValueSet, ticketRepo.value.setMetaValue)\n        .listen(Events.Ticket.MetaValuesMerged, ticketRepo.value.mergeMetaValues)\n        .listen(Events.Ticket.MetricsAdjusted, ticketRepo.value.adjustMetrics);\n});\n</script>\n\n<style scoped>\n.ticket-monitor:deep(table) {\n    table-layout: fixed;\n}\n.operator-pool-move {\n    transition: all 0.5s ease;\n}\n</style>\n"],"names":["element","_a","_b","BaseQuery","BaseRepository","__decorateClass","Operator","Ticket","x","ready","route","complexity","Repository","TicketCategoryRepository","Events.Channel","Events.Operator","Events.Ticket"],"mappings":"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}