{"version":3,"file":"TransitionGroup-34a587b3.js","sources":["../../../resources/js/components/Transition.ts","../../../resources/js/components/TransitionGroup.ts"],"sourcesContent":["import {\n    BaseTransition,\n    BaseTransitionProps,\n    BaseTransitionPropsValidators,\n    h,\n    //assertNumber,\n    FunctionalComponent,\n    //compatUtils,\n    //DeprecationTypes,\n} from \"vue\";\nimport { isObject, toNumber, extend, isArray } from \"@vue/shared\";\n\nconst __DEV__ = false;\nconst __COMPAT__ = false;\n\nconst TRANSITION = \"transition\";\nconst ANIMATION = \"animation\";\n\ntype AnimationTypes = typeof TRANSITION | typeof ANIMATION;\n\nexport interface TransitionProps extends BaseTransitionProps<Element> {\n    name?: string;\n    type?: AnimationTypes;\n    css?: boolean;\n    duration?: number | { enter: number; leave: number };\n    // custom transition classes\n    enterFromClass?: string;\n    enterActiveClass?: string;\n    enterToClass?: string;\n    appearFromClass?: string;\n    appearActiveClass?: string;\n    appearToClass?: string;\n    leaveFromClass?: string;\n    leaveActiveClass?: string;\n    leaveToClass?: string;\n}\n\nexport interface ElementWithTransition extends HTMLElement {\n    // _vtc = Vue Transition Classes.\n    // Store the temporarily-added transition classes on the element\n    // so that we can avoid overwriting them if the element's class is patched\n    // during the transition.\n    _vtc?: Set<string>;\n}\n\n// DOM Transition is a higher-order-component based on the platform-agnostic\n// base Transition component, with DOM-specific logic.\nexport const Transition: FunctionalComponent<TransitionProps> = (props, { slots }) =>\n    h(BaseTransition, resolveTransitionProps(props), slots);\n\nTransition.displayName = \"Transition\";\n\nif (__COMPAT__) {\n    Transition.__isBuiltIn = true;\n}\n\nconst DOMTransitionPropsValidators = {\n    name: String,\n    type: String,\n    css: {\n        type: Boolean,\n        default: true,\n    },\n    duration: [String, Number, Object],\n    enterFromClass: String,\n    enterActiveClass: String,\n    enterToClass: String,\n    appearFromClass: String,\n    appearActiveClass: String,\n    appearToClass: String,\n    leaveFromClass: String,\n    leaveActiveClass: String,\n    leaveToClass: String,\n};\n\nexport const TransitionPropsValidators = (Transition.props = /*#__PURE__*/ extend(\n    {},\n    BaseTransitionPropsValidators as any,\n    DOMTransitionPropsValidators,\n));\n\n/**\n * #3227 Incoming hooks may be merged into arrays when wrapping Transition\n * with custom HOCs.\n */\nconst callHook = (hook: Function | Function[] | undefined, args: any[] = []) => {\n    if (isArray(hook)) {\n        hook.forEach((h) => h(...args));\n    } else if (hook) {\n        hook(...args);\n    }\n};\n\n/**\n * Check if a hook expects a callback (2nd arg), which means the user\n * intends to explicitly control the end of the transition.\n */\nconst hasExplicitCallback = (hook: Function | Function[] | undefined): boolean => {\n    return hook ? (isArray(hook) ? hook.some((h) => h.length > 1) : hook.length > 1) : false;\n};\n\nexport function resolveTransitionProps(rawProps: TransitionProps): BaseTransitionProps<Element> {\n    const baseProps: BaseTransitionProps<Element> = {};\n    for (const key in rawProps) {\n        if (!(key in DOMTransitionPropsValidators)) {\n            (baseProps as any)[key] = (rawProps as any)[key];\n        }\n    }\n\n    if (rawProps.css === false) {\n        return baseProps;\n    }\n\n    const {\n        name = \"v\",\n        type,\n        duration,\n        enterFromClass = `${name}-enter-from`,\n        enterActiveClass = `${name}-enter-active`,\n        enterToClass = `${name}-enter-to`,\n        appearFromClass = enterFromClass,\n        appearActiveClass = enterActiveClass,\n        appearToClass = enterToClass,\n        leaveFromClass = `${name}-leave-from`,\n        leaveActiveClass = `${name}-leave-active`,\n        leaveToClass = `${name}-leave-to`,\n    } = rawProps;\n\n    // legacy transition class compat\n    const legacyClassEnabled = __COMPAT__; //&& compatUtils.isCompatEnabled(DeprecationTypes.TRANSITION_CLASSES, null);\n    let legacyEnterFromClass: string;\n    let legacyAppearFromClass: string;\n    let legacyLeaveFromClass: string;\n    if (__COMPAT__ && legacyClassEnabled) {\n        const toLegacyClass = (cls: string) => cls.replace(/-from$/, \"\");\n        if (!rawProps.enterFromClass) {\n            legacyEnterFromClass = toLegacyClass(enterFromClass);\n        }\n        if (!rawProps.appearFromClass) {\n            legacyAppearFromClass = toLegacyClass(appearFromClass);\n        }\n        if (!rawProps.leaveFromClass) {\n            legacyLeaveFromClass = toLegacyClass(leaveFromClass);\n        }\n    }\n\n    const durations = normalizeDuration(duration);\n    const enterDuration = durations && durations[0];\n    const leaveDuration = durations && durations[1];\n    const {\n        onBeforeEnter,\n        onEnter,\n        onEnterCancelled,\n        onLeave,\n        onLeaveCancelled,\n        onBeforeAppear = onBeforeEnter,\n        onAppear = onEnter,\n        onAppearCancelled = onEnterCancelled,\n    } = baseProps;\n\n    const finishEnter = (el: Element, isAppear: boolean, done?: () => void) => {\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\n        done && done();\n    };\n\n    const finishLeave = (el: Element & { _isLeaving?: boolean }, done?: () => void) => {\n        el._isLeaving = false;\n        removeTransitionClass(el, leaveFromClass);\n        removeTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveActiveClass);\n        done && done();\n    };\n\n    const makeEnterHook = (isAppear: boolean) => {\n        return (el: Element, done: () => void) => {\n            const hook = isAppear ? onAppear : onEnter;\n            const resolve = () => finishEnter(el, isAppear, done);\n            callHook(hook, [el, resolve]);\n            nextFrame(() => {\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\n                if (__COMPAT__ && legacyClassEnabled) {\n                    const legacyClass = isAppear ? legacyAppearFromClass : legacyEnterFromClass;\n                    if (legacyClass) {\n                        removeTransitionClass(el, legacyClass);\n                    }\n                }\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\n                if (!hasExplicitCallback(hook)) {\n                    whenTransitionEnds(el, type, enterDuration, resolve);\n                }\n            });\n        };\n    };\n\n    return extend(baseProps, {\n        onBeforeEnter(el) {\n            callHook(onBeforeEnter, [el]);\n            addTransitionClass(el, enterFromClass);\n            if (__COMPAT__ && legacyClassEnabled && legacyEnterFromClass) {\n                addTransitionClass(el, legacyEnterFromClass);\n            }\n            addTransitionClass(el, enterActiveClass);\n        },\n        onBeforeAppear(el) {\n            callHook(onBeforeAppear, [el]);\n            addTransitionClass(el, appearFromClass);\n            if (__COMPAT__ && legacyClassEnabled && legacyAppearFromClass) {\n                addTransitionClass(el, legacyAppearFromClass);\n            }\n            addTransitionClass(el, appearActiveClass);\n        },\n        onEnter: makeEnterHook(false),\n        onAppear: makeEnterHook(true),\n        onLeave(el: Element & { _isLeaving?: boolean }, done) {\n            el._isLeaving = true;\n            const resolve = () => finishLeave(el, done);\n            addTransitionClass(el, leaveFromClass);\n            if (__COMPAT__ && legacyClassEnabled && legacyLeaveFromClass) {\n                addTransitionClass(el, legacyLeaveFromClass);\n            }\n            // force reflow so *-leave-from classes immediately take effect (#2593)\n            forceReflow();\n            addTransitionClass(el, leaveActiveClass);\n            nextFrame(() => {\n                if (!el._isLeaving) {\n                    // cancelled\n                    return;\n                }\n                removeTransitionClass(el, leaveFromClass);\n                if (__COMPAT__ && legacyClassEnabled && legacyLeaveFromClass) {\n                    removeTransitionClass(el, legacyLeaveFromClass);\n                }\n                addTransitionClass(el, leaveToClass);\n                if (!hasExplicitCallback(onLeave)) {\n                    whenTransitionEnds(el, type, leaveDuration, resolve);\n                }\n            });\n            callHook(onLeave, [el, resolve]);\n        },\n        onEnterCancelled(el) {\n            finishEnter(el, false);\n            callHook(onEnterCancelled, [el]);\n        },\n        onAppearCancelled(el) {\n            finishEnter(el, true);\n            callHook(onAppearCancelled, [el]);\n        },\n        onLeaveCancelled(el) {\n            finishLeave(el);\n            callHook(onLeaveCancelled, [el]);\n        },\n    } as BaseTransitionProps<Element>);\n}\n\nfunction normalizeDuration(duration: TransitionProps[\"duration\"]): [number, number] | null {\n    if (duration == null) {\n        return null;\n    } else if (isObject(duration)) {\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\n    } else {\n        const n = NumberOf(duration);\n        return [n, n];\n    }\n}\n\nfunction NumberOf(val: unknown): number {\n    const res = toNumber(val);\n    if (__DEV__) {\n        //assertNumber(res, \"<transition> explicit duration\");\n    }\n    return res;\n}\n\nexport function addTransitionClass(el: Element, cls: string) {\n    cls.split(/\\s+/).forEach((c) => c && el.classList.add(c));\n    ((el as ElementWithTransition)._vtc || ((el as ElementWithTransition)._vtc = new Set())).add(cls);\n}\n\nexport function removeTransitionClass(el: Element, cls: string) {\n    cls.split(/\\s+/).forEach((c) => c && el.classList.remove(c));\n    const { _vtc } = el as ElementWithTransition;\n    if (_vtc) {\n        _vtc.delete(cls);\n        if (!_vtc!.size) {\n            (el as ElementWithTransition)._vtc = undefined;\n        }\n    }\n}\n\nfunction nextFrame(cb: () => void) {\n    requestAnimationFrame(() => {\n        requestAnimationFrame(cb);\n    });\n}\n\nlet endId = 0;\n\nfunction whenTransitionEnds(\n    el: Element & { _endId?: number },\n    expectedType: TransitionProps[\"type\"] | undefined,\n    explicitTimeout: number | null,\n    resolve: () => void,\n) {\n    const id = (el._endId = ++endId);\n    const resolveIfNotStale = () => {\n        if (id === el._endId) {\n            resolve();\n        }\n    };\n\n    if (explicitTimeout) {\n        return setTimeout(resolveIfNotStale, explicitTimeout);\n    }\n\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\n    if (!type) {\n        return resolve();\n    }\n\n    const endEvent = type + \"end\";\n    let ended = 0;\n    const end = () => {\n        el.removeEventListener(endEvent, onEnd);\n        resolveIfNotStale();\n    };\n    const onEnd = (e: Event) => {\n        if (e.target === el && ++ended >= propCount) {\n            end();\n        }\n    };\n    setTimeout(() => {\n        if (ended < propCount) {\n            end();\n        }\n    }, timeout + 1);\n    el.addEventListener(endEvent, onEnd);\n}\n\ninterface CSSTransitionInfo {\n    type: AnimationTypes | null;\n    propCount: number;\n    timeout: number;\n    hasTransform: boolean;\n}\n\ntype AnimationProperties = \"Delay\" | \"Duration\";\ntype StylePropertiesKey = `${AnimationTypes}${AnimationProperties}` | `${typeof TRANSITION}Property`;\n\nexport function getTransitionInfo(el: Element, expectedType?: TransitionProps[\"type\"]): CSSTransitionInfo {\n    const styles = window.getComputedStyle(el) as Pick<CSSStyleDeclaration, StylePropertiesKey>;\n    // JSDOM may return undefined for transition properties\n    const getStyleProperties = (key: StylePropertiesKey) => (styles[key] || \"\").split(\", \");\n    const transitionDelays = getStyleProperties(`${TRANSITION}Delay`);\n    const transitionDurations = getStyleProperties(`${TRANSITION}Duration`);\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n    const animationDelays = getStyleProperties(`${ANIMATION}Delay`);\n    const animationDurations = getStyleProperties(`${ANIMATION}Duration`);\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\n\n    let type: CSSTransitionInfo[\"type\"] = null;\n    let timeout = 0;\n    let propCount = 0;\n    /* istanbul ignore if */\n    if (expectedType === TRANSITION) {\n        if (transitionTimeout > 0) {\n            type = TRANSITION;\n            timeout = transitionTimeout;\n            propCount = transitionDurations.length;\n        }\n    } else if (expectedType === ANIMATION) {\n        if (animationTimeout > 0) {\n            type = ANIMATION;\n            timeout = animationTimeout;\n            propCount = animationDurations.length;\n        }\n    } else {\n        timeout = Math.max(transitionTimeout, animationTimeout);\n        type = timeout > 0 ? (transitionTimeout > animationTimeout ? TRANSITION : ANIMATION) : null;\n        propCount = type ? (type === TRANSITION ? transitionDurations.length : animationDurations.length) : 0;\n    }\n    const hasTransform =\n        type === TRANSITION && /\\b(transform|all)(,|$)/.test(getStyleProperties(`${TRANSITION}Property`).toString());\n    return {\n        type,\n        timeout,\n        propCount,\n        hasTransform,\n    };\n}\n\nfunction getTimeout(delays: string[], durations: string[]): number {\n    while (delays.length < durations.length) {\n        delays = delays.concat(delays);\n    }\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\n}\n\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\n// numbers in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down\n// (i.e. acting as a floor function) causing unexpected behaviors\nfunction toMs(s: string): number {\n    // #8409 default value for CSS durations can be 'auto'\n    if (s === \"auto\") return 0;\n    return Number(s.slice(0, -1).replace(\",\", \".\")) * 1000;\n}\n\n// synchronously force layout to put elements into a certain state\nexport function forceReflow() {\n    return document.body.offsetHeight;\n}\n","import {\n    TransitionProps,\n    addTransitionClass,\n    removeTransitionClass,\n    ElementWithTransition,\n    getTransitionInfo,\n    resolveTransitionProps,\n    TransitionPropsValidators,\n    forceReflow,\n} from \"./Transition\";\nimport {\n    Fragment,\n    VNode,\n    warn,\n    resolveTransitionHooks,\n    useTransitionState,\n    getTransitionRawChildren,\n    getCurrentInstance,\n    setTransitionHooks,\n    createVNode,\n    onUpdated,\n    SetupContext,\n    toRaw,\n    //compatUtils,\n    //DeprecationTypes,\n    ComponentOptions,\n} from \"vue\";\nimport { extend } from \"@vue/shared\";\n\nconst __DEV__ = false;\nconst __COMPAT__ = false;\n\nconst positionMap = new WeakMap<VNode, DOMRect>();\nconst newPositionMap = new WeakMap<VNode, DOMRect>();\n\nexport type TransitionGroupProps = Omit<TransitionProps, \"mode\"> & {\n    tag?: string;\n    moveClass?: string;\n};\n\nconst TransitionGroupImpl: ComponentOptions = {\n    name: \"TransitionGroup\",\n\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\n        tag: String,\n        moveClass: String,\n    }),\n\n    setup(props: TransitionGroupProps, { slots }: SetupContext) {\n        const instance = getCurrentInstance()!;\n        const state = useTransitionState();\n        let prevChildren: VNode[];\n        let children: VNode[];\n\n        onUpdated(() => {\n            // children is guaranteed to exist after initial render\n            if (!prevChildren.length) {\n                return;\n            }\n            const moveClass = props.moveClass || `${props.name || \"v\"}-move`;\n\n            if (!hasCSSTransform(prevChildren[0].el as ElementWithTransition, instance.vnode.el as Node, moveClass)) {\n                return;\n            }\n\n            // we divide the work into three loops to avoid mixing DOM reads and writes\n            // in each iteration - which helps prevent layout thrashing.\n            prevChildren.forEach(callPendingCbs);\n            prevChildren.forEach(recordPosition);\n            const movedChildren = prevChildren.filter(applyTranslation);\n\n            // force reflow to put everything in position\n            forceReflow();\n\n            movedChildren.forEach((c) => {\n                const el = c.el as ElementWithTransition;\n                const style = el.style;\n                addTransitionClass(el, moveClass);\n                style.transform = style.webkitTransform = style.transitionDuration = \"\";\n                const cb = ((el as any)._moveCb = (e: TransitionEvent) => {\n                    if (e && e.target !== el) {\n                        return;\n                    }\n                    if (!e || /transform$/.test(e.propertyName)) {\n                        el.removeEventListener(\"transitionend\", cb);\n                        (el as any)._moveCb = null;\n                        removeTransitionClass(el, moveClass);\n                    }\n                });\n                el.addEventListener(\"transitionend\", cb);\n            });\n        });\n\n        return () => {\n            const rawProps = toRaw(props);\n            const cssTransitionProps = resolveTransitionProps(rawProps);\n            let tag = rawProps.tag || Fragment;\n\n            if (\n                __COMPAT__ &&\n                !rawProps.tag //&&\n                //compatUtils.checkCompatEnabled(DeprecationTypes.TRANSITION_GROUP_ROOT, instance.parent)\n            ) {\n                tag = \"span\";\n            }\n\n            prevChildren = children;\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\n\n            for (let i = 0; i < children.length; i++) {\n                const child = children[i];\n                if (child.key != null) {\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\n                } else if (__DEV__) {\n                    warn(`<TransitionGroup> children must be keyed.`);\n                }\n            }\n\n            if (prevChildren) {\n                for (let i = 0; i < prevChildren.length; i++) {\n                    const child = prevChildren[i];\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\n                    positionMap.set(child, getRelativeBoundingClientRect(child.el as Element));\n                }\n            }\n\n            return createVNode(tag, null, children);\n        };\n    },\n};\n\nif (__COMPAT__) {\n    TransitionGroupImpl.__isBuiltIn = true;\n}\n\n/**\n * TransitionGroup does not support \"mode\" so we need to remove it from the\n * props declarations, but direct delete operation is considered a side effect\n * and will make the entire transition feature non-tree-shakeable, so we do it\n * in a function and mark the function's invocation as pure.\n */\nconst removeMode = (props: any) => delete props.mode;\n/*#__PURE__*/ removeMode(TransitionGroupImpl.props);\n\nexport const TransitionGroup = TransitionGroupImpl as unknown as {\n    new (): {\n        $props: TransitionGroupProps;\n    };\n};\n\nfunction callPendingCbs(c: VNode) {\n    const el = c.el as any;\n    if (el._moveCb) {\n        el._moveCb();\n    }\n    if (el._enterCb) {\n        el._enterCb();\n    }\n}\n\nfunction getRelativeBoundingClientRect(el: Element) {\n    const elRect = el.getBoundingClientRect();\n\n    if (!el.parentElement) {\n        return elRect;\n    }\n\n    const parentRect = el.parentElement.getBoundingClientRect();\n\n    return new DOMRectReadOnly(\n        elRect.x - parentRect.x,\n        elRect.y - parentRect.y,\n        elRect.width - parentRect.width,\n        elRect.height - parentRect.height,\n    );\n}\n\nfunction recordPosition(c: VNode) {\n    newPositionMap.set(c, getRelativeBoundingClientRect(c.el as Element));\n}\n\nfunction applyTranslation(c: VNode): VNode | undefined {\n    const oldPos = positionMap.get(c)!;\n    const newPos = newPositionMap.get(c)!;\n    const dx = oldPos.left - newPos.left;\n    const dy = oldPos.top - newPos.top;\n    if (dx || dy) {\n        const s = (c.el as HTMLElement).style;\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\n        s.transitionDuration = \"0s\";\n        return c;\n    }\n}\n\nfunction hasCSSTransform(el: ElementWithTransition, root: Node, moveClass: string): boolean {\n    // Detect whether an element with the move class applied has\n    // CSS transitions. Since the element may be inside an entering\n    // transition at this very moment, we make a clone of it and remove\n    // all other transition classes applied to ensure only the move class\n    // is applied.\n    const clone = el.cloneNode() as HTMLElement;\n    if (el._vtc) {\n        el._vtc.forEach((cls) => {\n            cls.split(/\\s+/).forEach((c) => c && clone.classList.remove(c));\n        });\n    }\n    moveClass.split(/\\s+/).forEach((c) => c && clone.classList.add(c));\n    clone.style.display = \"none\";\n    const container = (root.nodeType === 1 ? root : root.parentNode) as HTMLElement;\n    container.appendChild(clone);\n    const { hasTransform } = getTransitionInfo(clone);\n    container.removeChild(clone);\n    return hasTransform;\n}\n"],"names":["h"],"mappings":"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"}