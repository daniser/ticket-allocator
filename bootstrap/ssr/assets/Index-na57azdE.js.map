{"version":3,"file":"Index-na57azdE.js","sources":["../../../resources/js/pages/Trans/Index.vue"],"sourcesContent":["<template>\n    <Head title=\"Trans\" />\n\n    <DefaultLayout>\n        <template #header>\n            <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">Trans</h2>\n        </template>\n\n        <div>\n            <v-table density=\"compact\" class=\"monitor bg-transparent overflow-hidden\">\n                <TransGroup tag=\"tbody\" name=\"operators\">\n                    <TransOperator v-for=\"operator in operators\" :key=\"operator.id\" :operator=\"operator\" />\n                </TransGroup>\n            </v-table>\n            <v-container>\n                <v-row>\n                    <v-col>\n                        <v-btn color=\"primary\" class=\"mr-3\" @click=\"addOperator\">Add operator</v-btn>\n                        <v-btn color=\"primary\" class=\"mr-3\" @click=\"addTicket\">Add ticket</v-btn>\n                        <v-btn color=\"primary\" class=\"mr-3\" @click=\"removeTicket\">Remove ticket</v-btn>\n                        <v-btn color=\"primary\" class=\"mr-3\" @click=\"flipOperators\">Flip operators</v-btn>\n                        <v-btn color=\"primary\" class=\"mr-3\" @click=\"shuffleOperators\">Shuffle operators</v-btn>\n                        <v-btn color=\"primary\" class=\"mr-3\" @click=\"shuffleTickets\">Shuffle tickets</v-btn>\n                        <v-btn color=\"primary\" class=\"mr-3\" @click=\"shuffleBoth\">Shuffle both</v-btn>\n                        <v-btn color=\"primary\" class=\"mr-3\" @click=\"randomAction\">Random action</v-btn>\n                        <v-btn color=\"error\" class=\"mr-3\" @click=\"reset\">Reset</v-btn>\n                    </v-col>\n                </v-row>\n            </v-container>\n        </div>\n    </DefaultLayout>\n</template>\n\n<script setup lang=\"ts\">\nimport DefaultLayout from \"@/layouts/Default.vue\";\nimport { Head, usePage } from \"@inertiajs/vue3\";\nimport { ref, computed, nextTick } from \"vue\";\nimport { random, remove, reverse, sample, shuffle, uniqueId } from \"lodash\";\nimport { TransitionGroup as TransGroup } from \"@/components/TransitionGroup\";\nimport TransOperator from \"./Operator.vue\";\nimport type { DisplayOptions } from \"@/types\";\nimport type { Operator } from \"@/types/trans\";\n\nconst operatorNames = [\"Apollo\", \"Hermes\", \"Ares\", \"Zeus\", \"Poseidon\", \"Dionysus\", \"Aphrodite\", \"Hephaestus\", \"Athena\"];\nconst ticketNames = [\"Lorem\", \"Ipsum\", \"Dolor\", \"Sit\", \"Amet\"];\nconst operators = ref<Operator[]>([]);\nconst config = computed(() => usePage().props.options as DisplayOptions);\nlet priority = 0;\n\nasync function addOperator() {\n    await nextTick();\n    operators.value.push({\n        id: uniqueId(),\n        name: sample(operatorNames) ?? \"bitch\",\n        priority: priority++,\n        tickets: [],\n    });\n}\n\nasync function addTicket() {\n    await nextTick();\n    const operator = <Operator | undefined>sample(operators.value);\n    operator?.tickets.push({\n        id: uniqueId(),\n        name: sample(ticketNames) ?? \"bitch\",\n        weight: random(0, config.value.weight_threshold),\n    });\n}\n\nasync function removeTicket() {\n    let operator: Operator | undefined;\n    let counter = 0;\n    await nextTick();\n    do {\n        operator = <Operator | undefined>sample(operators.value);\n        counter++;\n    } while (operator && operator.tickets.length === 0 && counter < 10);\n    operator && remove(operator.tickets, (ticket, index) => index === random(0, operator!.tickets.length - 1));\n}\n\nasync function flipOperators() {\n    await nextTick();\n    operators.value = reverse(operators.value);\n}\n\nasync function shuffleOperators() {\n    await nextTick();\n    operators.value = shuffle(operators.value);\n}\n\nasync function shuffleTickets() {\n    await nextTick();\n    for (const operator of operators.value) {\n        //await nextTick();\n        operator.tickets = shuffle(operator.tickets);\n    }\n}\n\nasync function shuffleBoth() {\n    await shuffleTickets();\n    await shuffleOperators();\n}\n\nasync function randomAction() {\n    await sample([\n        shuffleOperators,\n        shuffleOperators,\n        addTicket,\n        addTicket,\n        addTicket,\n        removeTicket,\n        shuffleTickets,\n        shuffleBoth,\n    ])?.();\n}\n\nasync function reset() {\n    await nextTick();\n    operators.value = [];\n}\n</script>\n\n<style scoped>\n.monitor:deep(table) {\n    table-layout: fixed;\n    overflow: hidden;\n}\n\n.monitor:deep(table th) {\n    width: 12em;\n}\n\n.operators-move {\n    transition: transform 2s ease-in-out;\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CM,UAAA,gBAAgB,CAAC,UAAU,UAAU,QAAQ,QAAQ,YAAY,YAAY,aAAa,cAAc,QAAQ;AACtH,UAAM,cAAc,CAAC,SAAS,SAAS,SAAS,OAAO,MAAM;AACvD,UAAA,YAAY,IAAgB,CAAA,CAAE;AACpC,UAAM,SAAS,SAAS,MAAM,QAAQ,EAAE,MAAM,OAAyB;AACvE,QAAI,WAAW;AAEf,mBAAe,cAAc;AACzB,YAAM,SAAS;AACf,gBAAU,MAAM,KAAK;AAAA,QACjB,IAAI,SAAS;AAAA,QACb,MAAM,OAAO,aAAa,KAAK;AAAA,QAC/B,UAAU;AAAA,QACV,SAAS,CAAC;AAAA,MAAA,CACb;AAAA,IACL;AAEA,mBAAe,YAAY;AACvB,YAAM,SAAS;AACT,YAAA,WAAiC,OAAO,UAAU,KAAK;AAC7D,2CAAU,QAAQ,KAAK;AAAA,QACnB,IAAI,SAAS;AAAA,QACb,MAAM,OAAO,WAAW,KAAK;AAAA,QAC7B,QAAQ,OAAO,GAAG,OAAO,MAAM,gBAAgB;AAAA,MAAA;AAAA,IAEvD;AAEA,mBAAe,eAAe;AACtB,UAAA;AACJ,UAAI,UAAU;AACd,YAAM,SAAS;AACZ,SAAA;AACkC,mBAAA,OAAO,UAAU,KAAK;AACvD;AAAA,MAAA,SACK,YAAY,SAAS,QAAQ,WAAW,KAAK,UAAU;AAChE,kBAAY,OAAO,SAAS,SAAS,CAAC,QAAQ,UAAU,UAAU,OAAO,GAAG,SAAU,QAAQ,SAAS,CAAC,CAAC;AAAA,IAC7G;AAEA,mBAAe,gBAAgB;AAC3B,YAAM,SAAS;AACL,gBAAA,QAAQ,QAAQ,UAAU,KAAK;AAAA,IAC7C;AAEA,mBAAe,mBAAmB;AAC9B,YAAM,SAAS;AACL,gBAAA,QAAQ,QAAQ,UAAU,KAAK;AAAA,IAC7C;AAEA,mBAAe,iBAAiB;AAC5B,YAAM,SAAS;AACJ,iBAAA,YAAY,UAAU,OAAO;AAE3B,iBAAA,UAAU,QAAQ,SAAS,OAAO;AAAA,MAC/C;AAAA,IACJ;AAEA,mBAAe,cAAc;AACzB,YAAM,eAAe;AACrB,YAAM,iBAAiB;AAAA,IAC3B;AAEA,mBAAe,eAAe;;AAC1B,cAAM,YAAO;AAAA,QACT;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACH,CAAA,MATK;AAAA,IAUV;AAEA,mBAAe,QAAQ;AACnB,YAAM,SAAS;AACf,gBAAU,QAAQ;IACt}