{"version":3,"file":"ExpressionForm-VxQflRfb.js","sources":["../../../resources/js/pages/Factor/Partials/ExpressionForm.vue"],"sourcesContent":["<template>\n    <v-row>\n        <v-col cols=\"12\" md=\"12\">\n            <v-textarea v-model=\"config.variables\" :label=\"$t('variables')\" :error-messages=\"errors.variables\" />\n        </v-col>\n    </v-row>\n    <v-row>\n        <v-col cols=\"12\" md=\"12\">\n            <v-text-field\n                v-model=\"config.expressions.initial_weight\"\n                :label=\"$t('initial_weight_expression')\"\n                :error-messages=\"errors.initial_weight_expression\"\n            />\n        </v-col>\n    </v-row>\n    <v-row>\n        <v-col cols=\"12\" md=\"12\">\n            <v-text-field\n                v-model=\"config.expressions.weight_increment\"\n                :label=\"$t('weight_increment_expression')\"\n                :error-messages=\"errors.weight_increment_expression\"\n            />\n        </v-col>\n    </v-row>\n    <v-row>\n        <v-col cols=\"12\" md=\"12\">\n            <v-text-field\n                v-model=\"config.expressions.complexity\"\n                :label=\"$t('complexity_expression')\"\n                :error-messages=\"errors.complexity_expression\"\n            />\n        </v-col>\n    </v-row>\n    <v-row>\n        <v-col cols=\"12\" md=\"12\">\n            <v-text-field\n                v-model=\"config.expressions.delay\"\n                :label=\"$t('delay_expression')\"\n                :error-messages=\"errors.delay_expression\"\n            />\n        </v-col>\n    </v-row>\n    <v-row>\n        <v-col cols=\"12\" md=\"12\">\n            <v-text-field\n                v-model=\"config.expressions.reservation\"\n                :label=\"$t('reservation_expression')\"\n                :error-messages=\"errors.reservation_expression\"\n            />\n        </v-col>\n    </v-row>\n</template>\n\n<script setup lang=\"ts\">\nimport { ExpressiveFactorConfig } from \"@/types\";\nimport { computed } from \"vue\";\n\nconst props = defineProps<{\n    modelValue: ExpressiveFactorConfig;\n    errors: Record<string, string>;\n}>();\n\nconst emit = defineEmits<{\n    (e: \"update:modelValue\", value: ExpressiveFactorConfig): void;\n}>();\n\nconst config = computed<ExpressiveFactorConfig>({\n    get() {\n        return props.modelValue;\n    },\n    set(value) {\n        emit(\"update:modelValue\", value);\n    },\n});\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA,UAAM,QAAQ;AAKd,UAAM,OAAO;AAIb,UAAM,SAAS,SAAiC;AAAA,MAC5C,MAAM;AACF,eAAO,MAAM;AAAA,MACjB;AAAA,MACA,IAAI,OAAO;AACP,aAAK,qBAAqB,KAAK;AAAA,MACnC;AAAA,IAAA,CACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}